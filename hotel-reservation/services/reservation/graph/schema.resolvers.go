package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"

	"github.com/ericbutera/system-design/hotel-reservation/services/reservation/graph/model"
)

// CreateReservation is the resolver for the createReservation field.
func (r *mutationResolver) CreateReservation(ctx context.Context, guestName string, checkInDate string, checkOutDate string, roomType string) (*model.Reservation, error) {
	panic(fmt.Errorf("not implemented: CreateReservation - createReservation"))
}

// ViewReservation is the resolver for the viewReservation field.
func (r *queryResolver) ViewReservation(ctx context.Context, id string) (*model.Reservation, error) {
	panic(fmt.Errorf("not implemented: ViewReservation - viewReservation"))
}

// ViewReservations is the resolver for the viewReservations field.
func (r *queryResolver) ViewReservations(ctx context.Context) ([]*model.Reservation, error) {
	panic(fmt.Errorf("not implemented: ViewReservations - viewReservations"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
