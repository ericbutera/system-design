type Reservation {
  id: ID!
  quantity: Int!
  checkIn: String!
  checkOut: String!
  status: String!
  roomTypeId: ID!
  paymentId: ID!
  guestId: ID!
  roomType: String!
  guest: Guest!
  payment: Payment
  createdAt: String!
  hotelId: ID!
}

type Guest {
  id: ID!
  name: String!
  email: String!
  phone: String!
}

type Payment {
  id: ID!
  amount: Float!
  currency: String!
  status: String!
}

type Query {
  viewReservation(id: ID!): Reservation!
  viewReservations: [Reservation!]!
}


input CreateReservationInput {
  # TODO: future support guest checkout
  # guestName: String!
  # guestEmail: String!
  checkInDate: String!
  checkOutDate: String!
  roomTypeId: ID! # RoomType!
  quantity: Int!
  hotelId: ID!
}

type Mutation {
  createReservation(input: CreateReservationInput!): Reservation!
  cancelReservation(id: ID!): Boolean!
}
