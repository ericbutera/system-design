// Code generated by mockery v2.47.0. DO NOT EDIT.

package queue

import (
	context "context"
	models "device-readings/internal/readings/models"

	mock "github.com/stretchr/testify/mock"
)

// MockBatchReadingWriter is an autogenerated mock type for the BatchReadingWriter type
type MockBatchReadingWriter struct {
	mock.Mock
}

type MockBatchReadingWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBatchReadingWriter) EXPECT() *MockBatchReadingWriter_Expecter {
	return &MockBatchReadingWriter_Expecter{mock: &_m.Mock}
}

// Write provides a mock function with given fields: ctx, batch
func (_m *MockBatchReadingWriter) Write(ctx context.Context, batch []models.BatchReading) error {
	ret := _m.Called(ctx, batch)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []models.BatchReading) error); ok {
		r0 = rf(ctx, batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockBatchReadingWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockBatchReadingWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - ctx context.Context
//   - batch []models.BatchReading
func (_e *MockBatchReadingWriter_Expecter) Write(ctx interface{}, batch interface{}) *MockBatchReadingWriter_Write_Call {
	return &MockBatchReadingWriter_Write_Call{Call: _e.mock.On("Write", ctx, batch)}
}

func (_c *MockBatchReadingWriter_Write_Call) Run(run func(ctx context.Context, batch []models.BatchReading)) *MockBatchReadingWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]models.BatchReading))
	})
	return _c
}

func (_c *MockBatchReadingWriter_Write_Call) Return(_a0 error) *MockBatchReadingWriter_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockBatchReadingWriter_Write_Call) RunAndReturn(run func(context.Context, []models.BatchReading) error) *MockBatchReadingWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBatchReadingWriter creates a new instance of MockBatchReadingWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBatchReadingWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBatchReadingWriter {
	mock := &MockBatchReadingWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
