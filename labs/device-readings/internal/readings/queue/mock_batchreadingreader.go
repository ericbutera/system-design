// Code generated by mockery v2.47.0. DO NOT EDIT.

package queue

import (
	context "context"
	models "device-readings/internal/readings/models"

	mock "github.com/stretchr/testify/mock"
)

// MockBatchReadingReader is an autogenerated mock type for the BatchReadingReader type
type MockBatchReadingReader struct {
	mock.Mock
}

type MockBatchReadingReader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBatchReadingReader) EXPECT() *MockBatchReadingReader_Expecter {
	return &MockBatchReadingReader_Expecter{mock: &_m.Mock}
}

// Read provides a mock function with given fields: ctx, handler
func (_m *MockBatchReadingReader) Read(ctx context.Context, handler func(context.Context, []models.BatchReading) error) error {
	ret := _m.Called(ctx, handler)

	if len(ret) == 0 {
		panic("no return value specified for Read")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, func(context.Context, []models.BatchReading) error) error); ok {
		r0 = rf(ctx, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockBatchReadingReader_Read_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Read'
type MockBatchReadingReader_Read_Call struct {
	*mock.Call
}

// Read is a helper method to define mock.On call
//   - ctx context.Context
//   - handler func(context.Context , []models.BatchReading) error
func (_e *MockBatchReadingReader_Expecter) Read(ctx interface{}, handler interface{}) *MockBatchReadingReader_Read_Call {
	return &MockBatchReadingReader_Read_Call{Call: _e.mock.On("Read", ctx, handler)}
}

func (_c *MockBatchReadingReader_Read_Call) Run(run func(ctx context.Context, handler func(context.Context, []models.BatchReading) error)) *MockBatchReadingReader_Read_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(func(context.Context, []models.BatchReading) error))
	})
	return _c
}

func (_c *MockBatchReadingReader_Read_Call) Return(_a0 error) *MockBatchReadingReader_Read_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockBatchReadingReader_Read_Call) RunAndReturn(run func(context.Context, func(context.Context, []models.BatchReading) error) error) *MockBatchReadingReader_Read_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBatchReadingReader creates a new instance of MockBatchReadingReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBatchReadingReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBatchReadingReader {
	mock := &MockBatchReadingReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
